// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource  db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  gender      Gender
  phone       String
  role        Role
  isConfirmed Boolean   @default(false)
  forgetCode  String?
  tokens      Token[]
  categories  Category[]
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String
  isValid   Boolean  @default(true)
  agent     String?
  isConfirmed Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model Email {
  id        Int      @id @default(autoincrement())
  to        String
  subject   String
  text      String
  html      String?
  sentAt    DateTime @default(now())
  status    String   @default("PENDING")
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  imageId     Int?    @unique  // إضافة @unique هنا
  image       Image?  @relation(fields: [imageId], references: [id])
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id          Int     @id @default(autoincrement())
  public_id   String
  secure_url  String
  category    Category? @relation
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
